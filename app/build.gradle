plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
}

android {
    namespace 'com.tool38.wemedev'
    compileSdk 34

    defaultConfig {
        applicationId "com.tool38.wemedev"
        minSdk 21
        targetSdk 34
        versionCode 2
        versionName "1.1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    def RELEASE_STORE_FILE_ENV = System.getenv("RELEASE_STORE_FILE")
    def RELEASE_STORE_PASSWORD_ENV = System.getenv("RELEASE_STORE_PASSWORD")
    def RELEASE_KEY_ALIAS_ENV = System.getenv("RELEASE_KEY_ALIAS")
    def RELEASE_KEY_PASSWORD_ENV = System.getenv("RELEASE_KEY_PASSWORD")

    def RELEASE_STORE_FILE_PROP = project.findProperty("RELEASE_STORE_FILE")
    def RELEASE_STORE_PASSWORD_PROP = project.findProperty("RELEASE_STORE_PASSWORD")
    def RELEASE_KEY_ALIAS_PROP = project.findProperty("RELEASE_KEY_ALIAS")
    def RELEASE_KEY_PASSWORD_PROP = project.findProperty("RELEASE_KEY_PASSWORD")

    def HAS_RELEASE_SIGNING = (RELEASE_STORE_FILE_ENV ?: RELEASE_STORE_FILE_PROP) &&
            (RELEASE_STORE_PASSWORD_ENV ?: RELEASE_STORE_PASSWORD_PROP) &&
            (RELEASE_KEY_ALIAS_ENV ?: RELEASE_KEY_ALIAS_PROP) &&
            (RELEASE_KEY_PASSWORD_ENV ?: RELEASE_KEY_PASSWORD_PROP)

    signingConfigs {
        if (HAS_RELEASE_SIGNING) {
            release {
                storeFile file(RELEASE_STORE_FILE_ENV ?: RELEASE_STORE_FILE_PROP)
                storePassword (RELEASE_STORE_PASSWORD_ENV ?: RELEASE_STORE_PASSWORD_PROP)
                keyAlias (RELEASE_KEY_ALIAS_ENV ?: RELEASE_KEY_ALIAS_PROP)
                keyPassword (RELEASE_KEY_PASSWORD_ENV ?: RELEASE_KEY_PASSWORD_PROP)
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            if (HAS_RELEASE_SIGNING) {
                signingConfig signingConfigs.release
            }
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
    }
}

dependencies {
    implementation 'androidx.core:core-ktx:1.12.0'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.10.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.7.0'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.7.0'
    
    // ExoPlayer dependencies
    implementation 'com.google.android.exoplayer:exoplayer:2.19.1'
    implementation 'com.google.android.exoplayer:exoplayer-hls:2.19.1'
    implementation 'com.google.android.exoplayer:exoplayer-ui:2.19.1'
    implementation 'com.google.android.exoplayer:exoplayer-core:2.19.1'
    
    // MediaSession support
    implementation 'androidx.media:media:1.7.0'
    
    // FFmpeg for video conversion (暂时注释，使用简单方法)
    // implementation 'com.arthenica:mobile-ffmpeg-full:4.4.LTS'
    
    // Network
    implementation 'com.squareup.okhttp3:okhttp:4.12.0'
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    
    // Coroutines
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.7.3'
    
    // WorkManager for background tasks
    implementation 'androidx.work:work-runtime-ktx:2.9.0'
    
    // Lottie animation
    implementation 'com.airbnb.android:lottie:6.1.0'
    
    
    // Room database (暂时移除，避免KAPT问题)
    // implementation 'androidx.room:room-runtime:2.6.0'
    // implementation 'androidx.room:room-ktx:2.6.0'
    // kapt 'androidx.room:room-compiler:2.6.0'
    
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
}
